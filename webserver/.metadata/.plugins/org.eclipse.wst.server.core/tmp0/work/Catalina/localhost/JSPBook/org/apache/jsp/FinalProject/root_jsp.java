/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.43
 * Generated at: 2022-01-06 08:24:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.FinalProject;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class root_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {


public double distance(double lat1, double lon1, double lat2, double lon2){
	double theta = lon1-lon2;
	double dist = Math.sin(lat1*Math.PI/180.0)*Math.sin(lat2*Math.PI/180.0)+Math.cos(lat1*Math.PI/180.0)*Math.cos(lat2*Math.PI/180.0)*Math.cos(theta*Math.PI/180.0);
	dist = Math.acos(dist);
	dist = dist*180/Math.PI;
	dist = dist*60*1.1515;
	dist=dist*1.609344;
	return dist;
} 

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("@import url('https://fonts.googleapis.com/css2?family=Big+Shoulders+Stencil+Display&family=Caveat:wght@700&family=Nunito:ital,wght@1,700&family=Varela+Round&display=swap');\r\n");
      out.write(".name {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  display:inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".name .contents {\r\n");
      out.write("  visibility: hidden;\r\n");
      out.write("  width: 130px;\r\n");
      out.write("  background-color: #555;\r\n");
      out.write("  color: #fff;\r\n");
      out.write("  border-radius: 6px;\r\n");
      out.write("  padding: 5px;\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  z-index: 1;\r\n");
      out.write("  bottom: 125%;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  margin-left: -60px;\r\n");
      out.write("  opacity: 0;\r\n");
      out.write("  transition: opacity 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".name .contents::after {\r\n");
      out.write("  content: \"\";\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 100%;\r\n");
      out.write("  left: 50%;\r\n");
      out.write("  margin-left: -5px;\r\n");
      out.write("  border-width: 5px;\r\n");
      out.write("  border-style: solid;\r\n");
      out.write("  border-color: #555 transparent transparent transparent;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".name:hover .contents {\r\n");
      out.write("  visibility: visible;\r\n");
      out.write("  opacity: 1;\r\n");
      out.write("}\r\n");
      out.write("body{\r\n");
      out.write("background:powderblue;\r\n");
      out.write("padding:0px 40px;\r\n");
      out.write("}\r\n");
      out.write("#logo{\r\n");
      out.write("margin:10px 0px 10px 0px;\r\n");
      out.write("}\r\n");
      out.write("h1{\r\n");
      out.write("display:inline-block;\r\n");
      out.write("color:#303974;\r\n");
      out.write("text-shadow:3px 3px 4px #60a3bc;\r\n");
      out.write("font-size:55px;\r\n");
      out.write("font-family: 'Caveat', cursive;\r\n");
      out.write("line-height:35px;\r\n");
      out.write("}\r\n");
      out.write("#topmenu{\r\n");
      out.write("width:470px;\r\n");
      out.write("height:40px;\r\n");
      out.write("margin-top:70px;\r\n");
      out.write("float:right;\r\n");
      out.write("}\r\n");
      out.write("#topmenu ul li{\r\n");
      out.write("list-style:none;\r\n");
      out.write("color:white;\r\n");
      out.write("float:left;\r\n");
      out.write("text-align:center;\r\n");
      out.write("height:40px;\r\n");
      out.write("vertical-align:center;\r\n");
      out.write("line-height:40px;\r\n");
      out.write("margin-right:10px;\r\n");
      out.write("}\r\n");
      out.write("#topmenu .menu{\r\n");
      out.write("text-decoration:none;\r\n");
      out.write("color:white;\r\n");
      out.write("display:block;\r\n");
      out.write("width:120px;\r\n");
      out.write("font-weight:bold;\r\n");
      out.write("font-size:25px;\r\n");
      out.write("}\r\n");
      out.write("#topmenu .menu:hover{\r\n");
      out.write("text-decoration:underline;\r\n");
      out.write("}\r\n");
      out.write("article{\r\n");
      out.write("display:inline-block;\r\n");
      out.write("background:white;\r\n");
      out.write("width:45%;\r\n");
      out.write("height:450px;\r\n");
      out.write("border:4px solid midnightblue;\r\n");
      out.write("border-radius:5px;\r\n");
      out.write("padding:20px;\r\n");
      out.write("}\r\n");
      out.write("#date{\r\n");
      out.write("position:fixed;\r\n");
      out.write("float:left;\r\n");
      out.write("bottom:5px;\r\n");
      out.write("color:grey;\r\n");
      out.write("font-size:13px;\r\n");
      out.write("}\r\n");
      out.write("section{\r\n");
      out.write("display:inline-block;\r\n");
      out.write("width:45%;\r\n");
      out.write("height:500px;\r\n");
      out.write("float:right;\r\n");
      out.write("}\r\n");
      out.write("iframe{\r\n");
      out.write("width:100%;\r\n");
      out.write("height:100%;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
request.setCharacterEncoding("utf-8"); 
      out.write('\r');
      out.write('\n');
      Javabean.RootBean rt = null;
      synchronized (session) {
        rt = (Javabean.RootBean) _jspx_page_context.getAttribute("rt", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (rt == null){
          rt = new Javabean.RootBean();
          _jspx_page_context.setAttribute("rt", rt, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("rt"), request);
      out.write("\r\n");
      out.write("<header>\r\n");
      out.write("<img src=\"logo.png\" id=\"logo\" width=80>\r\n");
      out.write("<h1>Festival<br>Travel</h1>\r\n");
      out.write("<nav id=\"topmenu\">\r\n");
      out.write("<ul>\r\n");
      out.write("<li><a class=\"menu\" href=\"festival1.jsp\">FESTIVAL</a></li>\r\n");
      out.write("<li>|</li>\r\n");
      out.write("<li><a class=\"menu\" href=\"spot1.jsp\">SPOT</a></li>\r\n");
      out.write("<li>|</li>\r\n");
      out.write("<li><a class=\"menu\" href=\"root.jsp\"  style=\"color:midnightblue;text-decoration:underline;\">ROOT</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("</header>\r\n");
      out.write("<article>\r\n");

int fesNum=0;
int spotNum=0;
String w="";
if(rt.getFestival()[0]!=null)
	fesNum=rt.getFestival().length;
if(rt.getSpot()[0]!=null)
	spotNum=rt.getSpot().length;
int num=fesNum+spotNum;
String[] str=new String[num];
double[] lat=new double[num];//가장 북쪽=기준
double[] lon=new double[num];
String[] a=new String[3];
int cnt=0;
int fes=0;
if(fesNum!=0){
	for(String s:rt.getFestival()){
		str[cnt]=s;
		cnt++;
	}
}
fes=cnt;
if(spotNum!=0){
	for(String s:rt.getSpot()){
		str[cnt]=s;
		cnt++;
	}
}
for(int i=0; i<str.length; i++){
	a=str[i].split(",");
	System.out.println(Double.parseDouble(a[2]));
	lat[i]=Double.parseDouble(a[1]);
	lon[i]=Double.parseDouble(a[2]);
}
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
int distIndex=0;
double[] kilo=new double[num];
java.util.Map<Double, Integer> map = new java.util.HashMap<>();
for(int i=1; i<num; i++){
	if(lat[i-1]<lat[i]){
		distIndex=i;//가장 북쪽에 위치한 장소의 이름의 배열 인덱스값
	}
}
for(int i=0; i<num; i++){
	kilo[i]=distance(lat[distIndex], lon[distIndex], lat[i], lon[i]);
	map.put(kilo[i], i);
}
List<Double> key = new ArrayList<>(map.keySet());
Collections.sort(key);
int c=0;
for(Double n:key){
	if(c!=0)
		out.println("<br>&emsp;&emsp;&emsp;&emsp;⇣"+"<br>");
	if(map.get(n)<fes){
      out.write("\r\n");
      out.write("\t\t<img src=\"festival.png\" width=20px>\r\n");
	}else{
      out.write("\r\n");
      out.write("\t\t<img src=\"spot.png\" width=20px>\r\n");
  }
	w=str[map.get(n)].split(",")[3];
	if(w.equals("nosite"))
		w="nosite.html";

      out.write("\t<a href=\"");
      out.print(w);
      out.write("\" target=\"iframeweb\">\t\r\n");
      out.write("<div class=\"name\">");
out.println(str[map.get(n)].split(",")[0]+"<br>");
      out.write("<span class=\"contents\">");
      out.print( str[map.get(n)].split(",")[4]);
      out.write("</span></div>\r\n");
      out.write("</a>");

	c++;
}

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("</article>\r\n");
      out.write("<section>\r\n");
      out.write("<iframe src=\"\" name=\"iframeweb\">장소를 클릭해주세요.</iframe>\r\n");
      out.write("</section>\r\n");
      out.write("<p id=\"date\">축제 데이터 업데이트 날짜 : 2021-05-12 / 관광지 데이터 업데이트 날짜 : 2021-06-07</p>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
